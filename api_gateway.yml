server:
  port: 8085

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          # loads public key from classpath:keys/public.pem
          public-key-pem: classpath:keys/public.pem

  redis:
    host: localhost
    port: 6379

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

      routes:
        - id: customer-service
          uri: lb://customer-service
          predicates:
            - Path=/customers/**
          filters:
            - JwtForwardingFilter
            - name: CircuitBreaker
              args:
                name: customerServiceCB
                fallbackUri: forward:/fallback/customers
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 5
                key-resolver: "#{@principalNameKeyResolver}"

        - id: account-service
          uri: lb://account-service
          predicates:
            - Path=/accounts/**
          filters:
            - JwtForwardingFilter
            - name: CircuitBreaker
              args:
                name: accountServiceCB
                fallbackUri: forward:/fallback/accounts
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 10
                key-resolver: "#{@principalNameKeyResolver}"

        - id: transaction-service
          uri: lb://transaction-service
          predicates:
            - Path=/transactions/**
          filters:
            - JwtForwardingFilter
            - name: CircuitBreaker
              args:
                name: transactionServiceCB
                fallbackUri: forward:/fallback/transactions
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 15
                redis-rate-limiter.burstCapacity: 15
                key-resolver: "#{@principalNameKeyResolver}"

        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/notifications/**
          filters:
            - JwtForwardingFilter
            - name: CircuitBreaker
              args:
                name: notificationServiceCB
                fallbackUri: forward:/fallback/notifications
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 20
                key-resolver: "#{@principalNameKeyResolver}"

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

resilience4j:
  circuitbreaker:
    instances:
      customerServiceCB:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
      accountServiceCB:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
      transactionServiceCB:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
      notificationServiceCB:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
