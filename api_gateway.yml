server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
        - id: account-service
          uri: lb://account-service
          predicates:
            - Path=/api/accounts/**
          filters:
            - JwtAuthFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
            - name: CircuitBreaker
              args:
                name: accountCB
                fallbackUri: forward:/fallback/accounts
        - id: customer-service
          uri: lb://customer-service
          predicates:
            - Path=/api/customers/**
          filters:
            - JwtAuthFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
            - name: CircuitBreaker
              args:
                name: customerCB
                fallbackUri: forward:/fallback/customers
        - id: transaction-service
          uri: lb://transaction-service
          predicates:
            - Path=/api/transactions/**
          filters:
            - JwtAuthFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
            - name: CircuitBreaker
              args:
                name: transactionCB
                fallbackUri: forward:/fallback/transactions
        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/api/notifications/**
          filters:
            - JwtAuthFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
            - name: CircuitBreaker
              args:
                name: notificationCB
                fallbackUri: forward:/fallback/notifications

  redis:
    host: localhost
    port: 6379

resilience4j.circuitbreaker:
  instances:
    accountCB:
      slidingWindowSize: 10
      failureRateThreshold: 50
    customerCB:
      slidingWindowSize: 10
      failureRateThreshold: 50
    transactionCB:
      slidingWindowSize: 10
      failureRateThreshold: 50
    notificationCB:
      slidingWindowSize: 10
      failureRateThreshold: 50

jwt:
  public-key-location: classpath:public.pem
